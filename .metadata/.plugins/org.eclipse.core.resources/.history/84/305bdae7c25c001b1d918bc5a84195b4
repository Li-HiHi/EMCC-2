/*
 * dev_em.c
 *
 *  Created on: 2020年11月23日
 *      Author: zzf
 */



#include "dev_em.h"



uint8_t channel_name[8]={16,23,17,18,10,11,12,13};
uint32_t LV_Temp[9][10];
float LV[8];
 float AD[8];
float MinLVGot=1;



void LV_Sample(void)                             // ad采集函数
{
    for (uint8_t h=0;h<8;h++)
    {
        for(uint8_t i=0;i<=SampleTimes-1;i++)
            {
             /*获取采样初值*/

               LV_Temp[h][i]=SCADC_Sample(ADC0, 0, channel_name[h]);//这里只有两个电感，所以这个只有两行

            }
    }
}

void LV_Get_Val(void)//约0.3mS                  //对采集的值滤波
{
 // 有时会在0-65535(255)间跳动
  for(uint8_t i=0;i<=8;i++)
  {
    for(uint8_t j=0;j<=SampleTimes-1;j++)
    {
         if(LV_Temp[i][j]>500)//剔除毛刺信号
         {
             LV_Temp[i][j]=500;
         }
    }
  }

  //排序
  for(uint8_t k=0;k<=8;k++)
  {
    for(uint8_t i=0;i<=SampleTimes-2;i++)
    {
      for(uint8_t j=i+1;j<=SampleTimes-1;j++)
      {
          if(LV_Temp[k][i]>LV_Temp[k][j])
            swap(&LV_Temp[k][i],&LV_Temp[k][j]);//交换，swap函数自己写
      }
    }
  }

  for(uint8_t k=0;k<=8;k++)
  {
    LV[k]=0;
    for(uint8_t i=3;i<=SampleTimes-4;i++)
    {
         LV[k]+=(float)LV_Temp[k][i];
    }
    LV[k]=LV[k]/(SampleTimes-6);
    if( LV[k] < MinLVGot )
    {
       LV[k] = MinLVGot;
    }
  }

  AD[0] = LV[0];
  AD[1] = LV[1];
  AD[2] = LV[2];
  AD[3] = LV[3];
  AD[4] = LV[4];
  AD[5] = LV[5];
  AD[6] = LV[6];
  AD[7] = LV[7];
  AD[8] = LV[8];
  if(AD[0]<20&&AD[6]<20)
      em_sw=0;
}
void swap(uint32_t *a,uint32_t *b)
    {

    uint32_t temp=*a;
    *a=*b;
    *b=temp;
    }
float get_EM_error(void)
{
    float a;
    a=(float)(LV[6]-LV[0])/(LV[0]+LV[6]);//(LV[0]-LV[6])/(LV[0]+LV[6])
    return a;
}
